

Microchip Technology PIC LITE Macro Assembler V1.34 build -361300703 
                                                                                               Tue Nov 03 17:39:47 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	16F527
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=ENTRY,delta=2
     5                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	jmp_tab,global,class=ENTRY,delta=2
    13                           	psect	intentry,global,class=ENTRY,delta=2
    14                           	dabs	1,0xC,4
    15  0000                     	;# 
    16  0001                     	;# 
    17  0002                     	;# 
    18  0003                     	;# 
    19  0004                     	;# 
    20  0005                     	;# 
    21  0006                     	;# 
    22  0007                     	;# 
    23  0008                     	;# 
    24  0009                     	;# 
    25  000A                     	;# 
    26  000B                     	;# 
    27  000B                     	;# 
    28  0021                     	;# 
    29  0025                     	;# 
    30  0026                     	;# 
    31  0027                     	;# 
    32  0028                     	;# 
    33  0029                     	;# 
    34  002A                     	;# 
    35  0061                     	;# 
    36  0065                     	;# 
    37  0065                     	;# 
    38  0066                     	;# 
    39  0067                     	;# 
    40  0068                     	;# 
    41  0069                     	;# 
    42                           
    43                           	psect	idataBANK0
    44  05F                     __pidataBANK0:	
    45                           
    46                           ;initializer for _HOUR
    47  05F  80C                	retlw	12
    48                           
    49                           ;initializer for _MIN
    50  060  80C                	retlw	12
    51  0000                     _OPTION	set	0
    52  0007                     _PORTB	set	7
    53  0008                     _PORTC	set	8
    54  0007                     _TRISB	set	7
    55  0008                     _TRISC	set	8
    56  0058                     _GIE	set	88
    57  003C                     _RB4	set	60
    58  003D                     _RB5	set	61
    59  003E                     _RB6	set	62
    60  003F                     _RB7	set	63
    61  0040                     _RC0	set	64
    62  0041                     _RC1	set	65
    63  0042                     _RC2	set	66
    64  0043                     _RC3	set	67
    65  0044                     _RC4	set	68
    66  0045                     _RC5	set	69
    67  0046                     _RC6	set	70
    68  0047                     _RC7	set	71
    69  005D                     _T0IF	set	93
    70  002A                     _ANSEL	set	42
    71  0027                     _CM1CON0	set	39
    72  0028                     _CM2CON0	set	40
    73  032D                     _T0IE	set	813
    74                           
    75                           ; #config settings
    76  0000                     
    77                           	psect	cinit
    78  04B                     start_initialization:	
    79  04B                     __initialization:	
    80                           
    81                           ; Clear objects allocated to BANK0
    82  04B  078                	clrf	__pbssBANK0& (0+31)
    83  04C  079                	clrf	(__pbssBANK0+1)& (0+31)
    84  04D  07A                	clrf	(__pbssBANK0+2)& (0+31)
    85  04E  07B                	clrf	(__pbssBANK0+3)& (0+31)
    86  04F  07C                	clrf	(__pbssBANK0+4)& (0+31)
    87                           
    88                           ; Clear objects allocated to BANK1
    89  050  011                	movlb	1	; select bank1
    90  051  070                	clrf	__pbssBANK1& (0+31)
    91  052  071                	clrf	(__pbssBANK1+1)& (0+31)
    92                           
    93                           ; Initialize objects allocated to BANK0
    94  053  010                	movlb	0	; select bank0
    95  054  4A3  95F  4A3      	fcall	__pidataBANK0	;fetch initializer
    96  057  03D                	movwf	__pdataBANK0& (0+31)
    97  058  4A3  960  4A3      	fcall	__pidataBANK0+1	;fetch initializer
    98  05B  03E                	movwf	(__pdataBANK0+1)& (0+31)
    99  05C                     end_of_initialization:	
   100                           ;End of C runtime variable initialization code
   101                           
   102  05C                     __end_of__initialization:	
   103  05C  010                	movlb	0
   104  05D  4A3  A63           	ljmp	_main	;jump to C main() function
   105                           
   106                           	psect	bssBANK0
   107  018                     __pbssBANK0:	
   108  018                     _BUTT_action:	
   109  018                     	ds	1
   110  019                     _Change_time:	
   111  019                     	ds	1
   112  01A                     _Disp_timeout:	
   113  01A                     	ds	1
   114  01B                     _SEC:	
   115  01B                     	ds	1
   116  01C                     _STATE:	
   117  01C                     	ds	1
   118                           
   119                           	psect	dataBANK0
   120  01D                     __pdataBANK0:	
   121  01D                     _HOUR:	
   122  01D                     	ds	1
   123  01E                     _MIN:	
   124  01E                     	ds	1
   125                           
   126                           	psect	bssBANK1
   127  030                     __pbssBANK1:	
   128  030                     _INTCNT:	
   129  030                     	ds	2
   130                           
   131                           	psect	cstackBANK0
   132  010                     __pcstackBANK0:	
   133  010                     ?_TEST_LED_PATTERN:	
   134  010                     ?_main:	
   135                           ; 0 bytes @ 0x0
   136                           
   137  010                     ?_isr:	
   138                           ; 0 bytes @ 0x0
   139                           
   140  010                     ??_isr:	
   141                           ; 0 bytes @ 0x0
   142                           
   143                           
   144                           ; 0 bytes @ 0x0
   145  010                     	ds	1
   146  011                     ??_TEST_LED_PATTERN:	
   147                           
   148                           ; 0 bytes @ 0x1
   149  011                     	ds	2
   150  013                     TEST_LED_PATTERN@i:	
   151                           
   152                           ; 2 bytes @ 0x3
   153  013                     	ds	2
   154  015                     TEST_LED_PATTERN@mask:	
   155                           
   156                           ; 1 bytes @ 0x5
   157  015                     	ds	1
   158  016                     ??_main:	
   159                           
   160                           ; 0 bytes @ 0x6
   161  016                     	ds	2
   162                           
   163                           	psect	maintext
   164  063                     __pmaintext:	
   165 ;;
   166 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   167 ;;
   168 ;; *************** function _main *****************
   169 ;; Defined at:
   170 ;;		line 60 in file "main.c"
   171 ;; Parameters:    Size  Location     Type
   172 ;;		None
   173 ;; Auto vars:     Size  Location     Type
   174 ;;		None
   175 ;; Return value:  Size  Location     Type
   176 ;;		None               void
   177 ;; Registers used:
   178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3, pclath, cstack
   179 ;; Tracked objects:
   180 ;;		On entry : B03/0
   181 ;;		On exit  : 0/0
   182 ;;		Unchanged: 0/0
   183 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
   184 ;;      Params:         0       0       0       0       0
   185 ;;      Locals:         0       0       0       0       0
   186 ;;      Temps:          2       0       0       0       0
   187 ;;      Totals:         2       0       0       0       0
   188 ;;Total ram usage:        2 bytes
   189 ;; Hardware stack levels required when called:    2
   190 ;; This function calls:
   191 ;;		_TEST_LED_PATTERN
   192 ;; This function is called by:
   193 ;;		Startup code after reset
   194 ;; This function uses a non-reentrant model
   195 ;;
   196                           
   197                           
   198                           ;psect for function _main
   199  063                     _main:	
   200                           
   201                           ;main.c: 62: CM1CON0 = 0x00;
   202                           
   203                           ;incstack = 0
   204                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+3+pclath+cstack]
   205  063  011                	movlb	1	; select bank1
   206  064  067                	clrf	7	;volatile
   207                           
   208                           ;main.c: 63: CM2CON0 = 0x00;
   209  065  068                	clrf	8	;volatile
   210                           
   211                           ;main.c: 64: OPTION = 0b11001000;
   212  066  CC8                	movlw	200
   213  067  002                	option
   214                           
   215                           ;main.c: 65: ANSEL = 0x00;
   216  068  06A                	clrf	10	;volatile
   217                           
   218                           ;main.c: 66: PORTB = 0x00;
   219  069  010                	movlb	0	; select bank0
   220  06A  067                	clrf	7	;volatile
   221                           
   222                           ;main.c: 67: PORTC = 0x00;
   223  06B  068                	clrf	8	;volatile
   224                           
   225                           ;main.c: 68: TRISB = 0x00;
   226  06C  C00                	movlw	0
   227  06D  007                	tris	7
   228                           
   229                           ;main.c: 69: TRISC = 0x80;
   230  06E  C80                	movlw	128
   231  06F  008                	tris	8
   232                           
   233                           ;main.c: 71: T0IE = 1;
   234  070  013                	movlb	3	; select bank3
   235  071  5A5                	bsf	5,5	;volatile
   236                           
   237                           ;main.c: 72: GIE=1;
   238  072  50B                	bsf	11,0	;volatile
   239                           
   240                           ;main.c: 74: TEST_LED_PATTERN();
   241  073  4A3  961  4A3      	fcall	entry__TEST_LED_PATTERN
   242                           
   243                           ;main.c: 77: {
   244                           ;main.c: 78: switch(STATE)
   245                           
   246                           ;main.c: 76: while (1)
   247  076  BE0                	goto	l611
   248  077                     l513:	
   249                           ;main.c: 79: {
   250                           ;main.c: 81: case 0:
   251                           
   252                           
   253                           ;main.c: 82: PORTB = 0x00;
   254  077  010                	movlb	0	; select bank0
   255  078  067                	clrf	7	;volatile
   256                           
   257                           ;main.c: 83: PORTC = 0x00;
   258  079  068                	clrf	8	;volatile
   259                           
   260                           ;main.c: 85: if(RC7 == 0)
   261  07A  6E8                	btfsc	8,7	;volatile
   262  07B  BDF                	goto	L1
   263                           
   264                           ;main.c: 86: {
   265                           ;main.c: 87: STATE = 1;
   266  07C  07C                	clrf	_STATE
   267  07D  2BC                	incf	_STATE,f
   268                           
   269                           ;main.c: 88: BUTT_action = 1;
   270  07E  078                	clrf	_BUTT_action
   271  07F  2B8                	incf	_BUTT_action,f
   272                           
   273                           ;main.c: 89: }
   274  080  BE0                	goto	l611
   275  081                     l521:	
   276                           ;main.c: 97: case 1:
   277                           
   278                           ;main.c: 93: }
   279                           ;main.c: 94: break;
   280                           
   281                           ;main.c: 90: else
   282                           ;main.c: 91: {
   283                           ;main.c: 92: STATE = 0;
   284                           
   285                           
   286                           ;main.c: 99: Disp_timeout = SEC;
   287  081  21B                	movf	_SEC,w
   288  082  03A                	movwf	_Disp_timeout
   289                           
   290                           ;main.c: 100: Disp_timeout = Disp_timeout + 10;
   291  083  C0A                	movlw	10
   292  084  1DA                	addwf	_Disp_timeout,w
   293  085  03A                	movwf	_Disp_timeout
   294                           
   295                           ;main.c: 102: if(Disp_timeout >= 60)
   296  086  C3C                	movlw	60
   297  087  09A                	subwf	_Disp_timeout,w
   298  088  703                	skipc
   299  089  A8D                	goto	l529
   300                           
   301                           ;main.c: 103: {
   302                           ;main.c: 104: Disp_timeout = Disp_timeout - 60;
   303  08A  CC4                	movlw	196
   304  08B  1DA                	addwf	_Disp_timeout,w
   305  08C  03A                	movwf	_Disp_timeout
   306  08D                     l529:	
   307                           
   308                           ;main.c: 105: }
   309                           ;main.c: 107: Change_time = SEC;
   310  08D  21B                	movf	_SEC,w
   311  08E  039                	movwf	_Change_time
   312                           
   313                           ;main.c: 108: Change_time = Change_time + 3;
   314  08F  C03                	movlw	3
   315  090  1D9                	addwf	_Change_time,w
   316  091  039                	movwf	_Change_time
   317                           
   318                           ;main.c: 110: if(Change_time >= 60)
   319  092  C3C                	movlw	60
   320  093  099                	subwf	_Change_time,w
   321  094  703                	skipc
   322  095  A99                	goto	l535
   323                           
   324                           ;main.c: 111: {
   325                           ;main.c: 112: Change_time = Change_time - 60;
   326  096  CC4                	movlw	196
   327  097  1D9                	addwf	_Change_time,w
   328  098  039                	movwf	_Change_time
   329  099                     l535:	
   330                           
   331                           ;main.c: 113: }
   332                           ;main.c: 115: STATE = 2;
   333  099  C02                	movlw	2
   334  09A  03C                	movwf	_STATE
   335                           
   336                           ;main.c: 117: break;
   337  09B  BE0                	goto	l611
   338  09C                     l537:	
   339                           ;main.c: 120: case 2:
   340                           
   341                           
   342                           ;main.c: 122: RB4 = HOUR & 0b00000001;
   343  09C  71D                	btfss	_HOUR,0
   344  09D  AA1                	goto	u60
   345  09E  010                	movlb	0	; select bank0
   346  09F  587                	bsf	7,4	;volatile
   347  0A0  AA3                	goto	l539
   348  0A1                     u60:	
   349  0A1  010                	movlb	0	; select bank0
   350  0A2  487                	bcf	7,4	;volatile
   351  0A3                     l539:	
   352                           
   353                           ;main.c: 123: RB5 = (HOUR >> 1) & 0b00000001;
   354  0A3  21D                	movf	_HOUR,w
   355  0A4  036                	movwf	??_main
   356  0A5  C01                	movlw	1
   357  0A6  037                	movwf	??_main+1
   358  0A7                     u85:	
   359  0A7  403                	clrc
   360  0A8  336                	rrf	??_main,f
   361  0A9  2F7                	decfsz	??_main+1,f
   362  0AA  AA7                	goto	u85
   363  0AB  716                	btfss	??_main,0
   364  0AC  AB0                	goto	u90
   365  0AD  010                	movlb	0	; select bank0
   366  0AE  5A7                	bsf	7,5	;volatile
   367  0AF  AB2                	goto	l541
   368  0B0                     u90:	
   369  0B0  010                	movlb	0	; select bank0
   370  0B1  4A7                	bcf	7,5	;volatile
   371  0B2                     l541:	
   372                           
   373                           ;main.c: 124: RB6 = (HOUR >> 2) & 0b00000001;
   374  0B2  21D                	movf	_HOUR,w
   375  0B3  036                	movwf	??_main
   376  0B4  C02                	movlw	2
   377  0B5  037                	movwf	??_main+1
   378  0B6                     u115:	
   379  0B6  403                	clrc
   380  0B7  336                	rrf	??_main,f
   381  0B8  2F7                	decfsz	??_main+1,f
   382  0B9  AB6                	goto	u115
   383  0BA  716                	btfss	??_main,0
   384  0BB  ABF                	goto	u120
   385  0BC  010                	movlb	0	; select bank0
   386  0BD  5C7                	bsf	7,6	;volatile
   387  0BE  AC1                	goto	l543
   388  0BF                     u120:	
   389  0BF  010                	movlb	0	; select bank0
   390  0C0  4C7                	bcf	7,6	;volatile
   391  0C1                     l543:	
   392                           
   393                           ;main.c: 125: RB7 = (HOUR >> 3) & 0b00000001;
   394  0C1  21D                	movf	_HOUR,w
   395  0C2  036                	movwf	??_main
   396  0C3  C03                	movlw	3
   397  0C4  037                	movwf	??_main+1
   398  0C5                     u145:	
   399  0C5  403                	clrc
   400  0C6  336                	rrf	??_main,f
   401  0C7  2F7                	decfsz	??_main+1,f
   402  0C8  AC5                	goto	u145
   403  0C9  716                	btfss	??_main,0
   404  0CA  ACE                	goto	u150
   405  0CB  010                	movlb	0	; select bank0
   406  0CC  5E7                	bsf	7,7	;volatile
   407  0CD  AD0                	goto	l545
   408  0CE                     u150:	
   409  0CE  010                	movlb	0	; select bank0
   410  0CF  4E7                	bcf	7,7	;volatile
   411  0D0                     l545:	
   412                           
   413                           ;main.c: 127: RC0 = MIN & 0b00000001;
   414  0D0  71E                	btfss	_MIN,0
   415  0D1  AD5                	goto	u170
   416  0D2  010                	movlb	0	; select bank0
   417  0D3  508                	bsf	8,0	;volatile
   418  0D4  AD7                	goto	u184
   419  0D5                     u170:	
   420  0D5  010                	movlb	0	; select bank0
   421  0D6  408                	bcf	8,0	;volatile
   422  0D7                     u184:	
   423                           
   424                           ;main.c: 128: RC1 = (MIN >> 1) & 0b00000001;
   425  0D7  21E                	movf	_MIN,w
   426  0D8  036                	movwf	??_main
   427  0D9  C01                	movlw	1
   428  0DA  037                	movwf	??_main+1
   429  0DB                     u195:	
   430  0DB  403                	clrc
   431  0DC  336                	rrf	??_main,f
   432  0DD  2F7                	decfsz	??_main+1,f
   433  0DE  ADB                	goto	u195
   434  0DF  716                	btfss	??_main,0
   435  0E0  AE4                	goto	u200
   436  0E1  010                	movlb	0	; select bank0
   437  0E2  528                	bsf	8,1	;volatile
   438  0E3  AE6                	goto	u214
   439  0E4                     u200:	
   440  0E4  010                	movlb	0	; select bank0
   441  0E5  428                	bcf	8,1	;volatile
   442  0E6                     u214:	
   443                           
   444                           ;main.c: 129: RC2 = (MIN >> 2) & 0b00000001;
   445  0E6  21E                	movf	_MIN,w
   446  0E7  036                	movwf	??_main
   447  0E8  C02                	movlw	2
   448  0E9  037                	movwf	??_main+1
   449  0EA                     u225:	
   450  0EA  403                	clrc
   451  0EB  336                	rrf	??_main,f
   452  0EC  2F7                	decfsz	??_main+1,f
   453  0ED  AEA                	goto	u225
   454  0EE  716                	btfss	??_main,0
   455  0EF  AF3                	goto	u230
   456  0F0  010                	movlb	0	; select bank0
   457  0F1  548                	bsf	8,2	;volatile
   458  0F2  AF5                	goto	u244
   459  0F3                     u230:	
   460  0F3  010                	movlb	0	; select bank0
   461  0F4  448                	bcf	8,2	;volatile
   462  0F5                     u244:	
   463                           
   464                           ;main.c: 130: RC3 = (MIN >> 3) & 0b00000001;
   465  0F5  21E                	movf	_MIN,w
   466  0F6  036                	movwf	??_main
   467  0F7  C03                	movlw	3
   468  0F8  037                	movwf	??_main+1
   469  0F9                     u255:	
   470  0F9  403                	clrc
   471  0FA  336                	rrf	??_main,f
   472  0FB  2F7                	decfsz	??_main+1,f
   473  0FC  AF9                	goto	u255
   474  0FD  716                	btfss	??_main,0
   475  0FE  B02                	goto	u260
   476  0FF  010                	movlb	0	; select bank0
   477  100  568                	bsf	8,3	;volatile
   478  101  B04                	goto	u274
   479  102                     u260:	
   480  102  010                	movlb	0	; select bank0
   481  103  468                	bcf	8,3	;volatile
   482  104                     u274:	
   483                           
   484                           ;main.c: 131: RC4 = (MIN >> 4) & 0b00000001;
   485  104  21E                	movf	_MIN,w
   486  105  036                	movwf	??_main
   487  106  C04                	movlw	4
   488  107  037                	movwf	??_main+1
   489  108                     u285:	
   490  108  403                	clrc
   491  109  336                	rrf	??_main,f
   492  10A  2F7                	decfsz	??_main+1,f
   493  10B  B08                	goto	u285
   494  10C  716                	btfss	??_main,0
   495  10D  B11                	goto	u290
   496  10E  010                	movlb	0	; select bank0
   497  10F  588                	bsf	8,4	;volatile
   498  110  B13                	goto	u304
   499  111                     u290:	
   500  111  010                	movlb	0	; select bank0
   501  112  488                	bcf	8,4	;volatile
   502  113                     u304:	
   503                           
   504                           ;main.c: 132: RC5 = (MIN >> 5) & 0b00000001;
   505  113  21E                	movf	_MIN,w
   506  114  036                	movwf	??_main
   507  115  C05                	movlw	5
   508  116  037                	movwf	??_main+1
   509  117                     u315:	
   510  117  403                	clrc
   511  118  336                	rrf	??_main,f
   512  119  2F7                	decfsz	??_main+1,f
   513  11A  B17                	goto	u315
   514  11B  716                	btfss	??_main,0
   515  11C  B20                	goto	u320
   516  11D  010                	movlb	0	; select bank0
   517  11E  5A8                	bsf	8,5	;volatile
   518  11F  B22                	goto	l547
   519  120                     u320:	
   520  120  010                	movlb	0	; select bank0
   521  121  4A8                	bcf	8,5	;volatile
   522  122                     l547:	
   523                           
   524                           ;main.c: 134: RC6 = SEC & 0b00000001;
   525  122  71B                	btfss	_SEC,0
   526  123  B27                	goto	u340
   527  124  010                	movlb	0	; select bank0
   528  125  5C8                	bsf	8,6	;volatile
   529  126  B29                	goto	l549
   530  127                     u340:	
   531  127  010                	movlb	0	; select bank0
   532  128  4C8                	bcf	8,6	;volatile
   533  129                     l549:	
   534                           
   535                           ;main.c: 136: if(RC7 == 1)
   536  129  6E8                	btfsc	8,7	;volatile
   537                           
   538                           ;main.c: 137: {
   539                           ;main.c: 138: BUTT_action = 0;
   540  12A  078                	clrf	_BUTT_action
   541                           
   542                           ;main.c: 139: }
   543                           ;main.c: 141: if(Disp_timeout == SEC)
   544  12B  21B                	movf	_SEC,w
   545  12C  036                	movwf	??_main
   546  12D  21A                	movf	_Disp_timeout,w
   547  12E  196                	xorwf	??_main,w
   548  12F  643                	btfsc	3,2
   549                           
   550                           ;main.c: 142: {
   551                           ;main.c: 143: STATE = 0;
   552  130  07C                	clrf	_STATE
   553                           
   554                           ;main.c: 144: }
   555                           ;main.c: 146: if(Change_time == SEC && RC7 == 0 && BUTT_action == 1)
   556  131  21B                	movf	_SEC,w
   557  132  036                	movwf	??_main
   558  133  219                	movf	_Change_time,w
   559  134  196                	xorwf	??_main,w
   560                           
   561                           ;main.c: 149: }
   562                           ;main.c: 151: break;
   563                           
   564                           ;main.c: 147: {
   565  135  BE0                	goto	l611
   566  136                     l563:	
   567                           ;main.c: 154: case 3:
   568                           
   569                           
   570                           ;main.c: 155: GIE = 0;
   571  136  40B                	bcf	11,0	;volatile
   572                           
   573                           ;main.c: 157: if(RC7 == 0)
   574  137  6E8                	btfsc	8,7	;volatile
   575  138  B4C                	goto	l579
   576                           
   577                           ;main.c: 158: {
   578                           ;main.c: 159: SEC = 0;
   579  139  07B                	clrf	_SEC
   580                           
   581                           ;main.c: 160: MIN = MIN + 1;
   582  13A  C01                	movlw	1
   583  13B  1DE                	addwf	_MIN,w
   584  13C  03E                	movwf	_MIN
   585                           
   586                           ;main.c: 161: if(MIN == 60)
   587  13D  C3C                	movlw	60
   588  13E  19E                	xorwf	_MIN,w
   589  13F  743                	btfss	3,2
   590  140  B51                	goto	l585
   591                           
   592                           ;main.c: 162: {
   593                           ;main.c: 163: MIN = 0;
   594  141  07E                	clrf	_MIN
   595                           
   596                           ;main.c: 164: HOUR = HOUR + 1;
   597  142  C01                	movlw	1
   598  143  1DD                	addwf	_HOUR,w
   599  144  03D                	movwf	_HOUR
   600                           
   601                           ;main.c: 165: if(HOUR == 13)
   602  145  C0D                	movlw	13
   603  146  19D                	xorwf	_HOUR,w
   604  147  743                	btfss	3,2
   605  148  B51                	goto	l585
   606                           
   607                           ;main.c: 166: {
   608                           ;main.c: 167: HOUR = 1;
   609  149  07D                	clrf	_HOUR
   610  14A  2BD                	incf	_HOUR,f
   611                           
   612                           ;main.c: 168: }
   613                           ;main.c: 169: }
   614                           ;main.c: 170: }
   615  14B  B51                	goto	l585
   616  14C                     l579:	
   617                           
   618                           ;main.c: 171: else if(RC7 == 1)
   619  14C  7E8                	btfss	8,7	;volatile
   620  14D  B51                	goto	l585
   621                           
   622                           ;main.c: 172: {
   623                           ;main.c: 173: GIE = 1;
   624  14E  50B                	bsf	11,0	;volatile
   625                           
   626                           ;main.c: 174: STATE = 2;
   627  14F  C02                	movlw	2
   628  150  03C                	movwf	_STATE
   629  151                     l585:	
   630                           
   631                           ;main.c: 175: }
   632                           ;main.c: 177: RB4 = HOUR & 0b00000001;
   633  151  71D                	btfss	_HOUR,0
   634  152  B56                	goto	u430
   635  153  010                	movlb	0	; select bank0
   636  154  587                	bsf	7,4	;volatile
   637  155  B58                	goto	l587
   638  156                     u430:	
   639  156  010                	movlb	0	; select bank0
   640  157  487                	bcf	7,4	;volatile
   641  158                     l587:	
   642                           
   643                           ;main.c: 178: RB5 = (HOUR >> 1) & 0b00000001;
   644  158  21D                	movf	_HOUR,w
   645  159  036                	movwf	??_main
   646  15A  C01                	movlw	1
   647  15B  037                	movwf	??_main+1
   648  15C                     u455:	
   649  15C  403                	clrc
   650  15D  336                	rrf	??_main,f
   651  15E  2F7                	decfsz	??_main+1,f
   652  15F  B5C                	goto	u455
   653  160  716                	btfss	??_main,0
   654  161  B65                	goto	u460
   655  162  010                	movlb	0	; select bank0
   656  163  5A7                	bsf	7,5	;volatile
   657  164  B67                	goto	l589
   658  165                     u460:	
   659  165  010                	movlb	0	; select bank0
   660  166  4A7                	bcf	7,5	;volatile
   661  167                     l589:	
   662                           
   663                           ;main.c: 179: RB6 = (HOUR >> 2) & 0b00000001;
   664  167  21D                	movf	_HOUR,w
   665  168  036                	movwf	??_main
   666  169  C02                	movlw	2
   667  16A  037                	movwf	??_main+1
   668  16B                     u485:	
   669  16B  403                	clrc
   670  16C  336                	rrf	??_main,f
   671  16D  2F7                	decfsz	??_main+1,f
   672  16E  B6B                	goto	u485
   673  16F  716                	btfss	??_main,0
   674  170  B74                	goto	u490
   675  171  010                	movlb	0	; select bank0
   676  172  5C7                	bsf	7,6	;volatile
   677  173  B76                	goto	l591
   678  174                     u490:	
   679  174  010                	movlb	0	; select bank0
   680  175  4C7                	bcf	7,6	;volatile
   681  176                     l591:	
   682                           
   683                           ;main.c: 180: RB7 = (HOUR >> 3) & 0b00000001;
   684  176  21D                	movf	_HOUR,w
   685  177  036                	movwf	??_main
   686  178  C03                	movlw	3
   687  179  037                	movwf	??_main+1
   688  17A                     u515:	
   689  17A  403                	clrc
   690  17B  336                	rrf	??_main,f
   691  17C  2F7                	decfsz	??_main+1,f
   692  17D  B7A                	goto	u515
   693  17E  716                	btfss	??_main,0
   694  17F  B83                	goto	u520
   695  180  010                	movlb	0	; select bank0
   696  181  5E7                	bsf	7,7	;volatile
   697  182  B85                	goto	l593
   698  183                     u520:	
   699  183  010                	movlb	0	; select bank0
   700  184  4E7                	bcf	7,7	;volatile
   701  185                     l593:	
   702                           
   703                           ;main.c: 182: RC0 = MIN & 0b00000001;
   704  185  71E                	btfss	_MIN,0
   705  186  B8A                	goto	u540
   706  187  010                	movlb	0	; select bank0
   707  188  508                	bsf	8,0	;volatile
   708  189  B8C                	goto	l595
   709  18A                     u540:	
   710  18A  010                	movlb	0	; select bank0
   711  18B  408                	bcf	8,0	;volatile
   712  18C                     l595:	
   713                           
   714                           ;main.c: 183: RC1 = (MIN >> 1) & 0b00000001;
   715  18C  21E                	movf	_MIN,w
   716  18D  036                	movwf	??_main
   717  18E  C01                	movlw	1
   718  18F  037                	movwf	??_main+1
   719  190                     u565:	
   720  190  403                	clrc
   721  191  336                	rrf	??_main,f
   722  192  2F7                	decfsz	??_main+1,f
   723  193  B90                	goto	u565
   724  194  716                	btfss	??_main,0
   725  195  B99                	goto	u570
   726  196  010                	movlb	0	; select bank0
   727  197  528                	bsf	8,1	;volatile
   728  198  B9B                	goto	l597
   729  199                     u570:	
   730  199  010                	movlb	0	; select bank0
   731  19A  428                	bcf	8,1	;volatile
   732  19B                     l597:	
   733                           
   734                           ;main.c: 184: RC2 = (MIN >> 2) & 0b00000001;
   735  19B  21E                	movf	_MIN,w
   736  19C  036                	movwf	??_main
   737  19D  C02                	movlw	2
   738  19E  037                	movwf	??_main+1
   739  19F                     u595:	
   740  19F  403                	clrc
   741  1A0  336                	rrf	??_main,f
   742  1A1  2F7                	decfsz	??_main+1,f
   743  1A2  B9F                	goto	u595
   744  1A3  716                	btfss	??_main,0
   745  1A4  BA8                	goto	u600
   746  1A5  010                	movlb	0	; select bank0
   747  1A6  548                	bsf	8,2	;volatile
   748  1A7  BAA                	goto	l599
   749  1A8                     u600:	
   750  1A8  010                	movlb	0	; select bank0
   751  1A9  448                	bcf	8,2	;volatile
   752  1AA                     l599:	
   753                           
   754                           ;main.c: 185: RC3 = (MIN >> 3) & 0b00000001;
   755  1AA  21E                	movf	_MIN,w
   756  1AB  036                	movwf	??_main
   757  1AC  C03                	movlw	3
   758  1AD  037                	movwf	??_main+1
   759  1AE                     u625:	
   760  1AE  403                	clrc
   761  1AF  336                	rrf	??_main,f
   762  1B0  2F7                	decfsz	??_main+1,f
   763  1B1  BAE                	goto	u625
   764  1B2  716                	btfss	??_main,0
   765  1B3  BB7                	goto	u630
   766  1B4  010                	movlb	0	; select bank0
   767  1B5  568                	bsf	8,3	;volatile
   768  1B6  BB9                	goto	l601
   769  1B7                     u630:	
   770  1B7  010                	movlb	0	; select bank0
   771  1B8  468                	bcf	8,3	;volatile
   772  1B9                     l601:	
   773                           
   774                           ;main.c: 186: RC4 = (MIN >> 4) & 0b00000001;
   775  1B9  21E                	movf	_MIN,w
   776  1BA  036                	movwf	??_main
   777  1BB  C04                	movlw	4
   778  1BC  037                	movwf	??_main+1
   779  1BD                     u655:	
   780  1BD  403                	clrc
   781  1BE  336                	rrf	??_main,f
   782  1BF  2F7                	decfsz	??_main+1,f
   783  1C0  BBD                	goto	u655
   784  1C1  716                	btfss	??_main,0
   785  1C2  BC6                	goto	u660
   786  1C3  010                	movlb	0	; select bank0
   787  1C4  588                	bsf	8,4	;volatile
   788  1C5  BC8                	goto	l603
   789  1C6                     u660:	
   790  1C6  010                	movlb	0	; select bank0
   791  1C7  488                	bcf	8,4	;volatile
   792  1C8                     l603:	
   793                           
   794                           ;main.c: 187: RC5 = (MIN >> 5) & 0b00000001;
   795  1C8  21E                	movf	_MIN,w
   796  1C9  036                	movwf	??_main
   797  1CA  C05                	movlw	5
   798  1CB  037                	movwf	??_main+1
   799  1CC                     u685:	
   800  1CC  403                	clrc
   801  1CD  336                	rrf	??_main,f
   802  1CE  2F7                	decfsz	??_main+1,f
   803  1CF  BCC                	goto	u685
   804  1D0  716                	btfss	??_main,0
   805  1D1  BD5                	goto	u690
   806  1D2  010                	movlb	0	; select bank0
   807  1D3  5A8                	bsf	8,5	;volatile
   808  1D4  BD7                	goto	l605
   809  1D5                     u690:	
   810  1D5  010                	movlb	0	; select bank0
   811  1D6  4A8                	bcf	8,5	;volatile
   812  1D7                     l605:	
   813                           
   814                           ;main.c: 189: _delay((unsigned long)((150)*(32768/4000.0)));
   815  1D7  CF5                	movlw	245
   816  1D8  036                	movwf	??_main
   817  1D9                     u797:	
   818  1D9  BDA                	nop2
   819  1DA  2F6                	decfsz	??_main,f
   820  1DB  BD9                	goto	u797
   821  1DC  BDD                	nop2	;nop
   822                           
   823                           ;main.c: 191: break;
   824  1DD  BE0                	goto	l611
   825  1DE                     l607:	
   826                           ;main.c: 193: default:
   827                           
   828                           
   829                           ;main.c: 195: STATE = 0;
   830  1DE  010                	movlb	0	; select bank0
   831  1DF                     L1:	
   832  1DF  07C                	clrf	_STATE
   833  1E0                     l611:	
   834                           ;main.c: 198: }
   835                           
   836                           ;main.c: 197: break;
   837                           
   838  1E0  010                	movlb	0	; select bank0
   839  1E1  21C                	movf	_STATE,w
   840                           
   841                           ; Switch size 1, requested type "space"
   842                           ; Number of cases is 4, Range of values is 0 to 3
   843                           ; switch strategies available:
   844                           ; Name         Instructions Cycles
   845                           ; simple_byte           13     7 (average)
   846                           ;	Chosen strategy is simple_byte
   847  1E2  F00                	xorlw	0	; case 0
   848  1E3  643                	skipnz
   849  1E4  A77                	goto	l513
   850  1E5  F01                	xorlw	1	; case 1
   851  1E6  643                	skipnz
   852  1E7  A81                	goto	l521
   853  1E8  F03                	xorlw	3	; case 2
   854  1E9  643                	skipnz
   855  1EA  A9C                	goto	l537
   856  1EB  F01                	xorlw	1	; case 3
   857  1EC  643                	skipnz
   858  1ED  B36                	goto	l563
   859  1EE  BDE                	goto	l607
   860  1EF  BE0                	goto	l611
   861  1F0                     __end_of_main:	
   862                           ;main.c: 201: }
   863                           ;main.c: 202: return;
   864                           
   865                           
   866                           	psect	text1
   867  3CE                     __ptext1:	
   868 ;; *************** function _TEST_LED_PATTERN *****************
   869 ;; Defined at:
   870 ;;		line 205 in file "main.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;		None
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  i               2    3[BANK0 ] int 
   875 ;;  mask            1    5[BANK0 ] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;		None               void
   878 ;; Registers used:
   879 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1, btemp+2, btemp+3
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
   885 ;;      Params:         0       0       0       0       0
   886 ;;      Locals:         3       0       0       0       0
   887 ;;      Temps:          2       0       0       0       0
   888 ;;      Totals:         5       0       0       0       0
   889 ;;Total ram usage:        5 bytes
   890 ;; Hardware stack levels used:    1
   891 ;; Hardware stack levels required when called:    1
   892 ;; This function calls:
   893 ;;		Nothing
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899                           
   900                           ;psect for function _TEST_LED_PATTERN
   901  3CE                     _TEST_LED_PATTERN:	
   902                           
   903                           ;main.c: 207: char mask = 0x01;
   904  3CE  010                	movlb	0	; select bank0
   905  3CF  075                	clrf	TEST_LED_PATTERN@mask
   906  3D0  2B5                	incf	TEST_LED_PATTERN@mask,f
   907                           
   908                           ;main.c: 209: for(int i = 0; i < 8; i++)
   909  3D1  073                	clrf	TEST_LED_PATTERN@i
   910  3D2  074                	clrf	TEST_LED_PATTERN@i+1
   911  3D3                     L2:	
   912  3D3  214                	movf	TEST_LED_PATTERN@i+1,w
   913  3D4  02F                	movwf	15
   914  3D5  213                	movf	TEST_LED_PATTERN@i,w
   915  3D6  02E                	movwf	14
   916  3D7  20F                	movf	15,w
   917  3D8  F80                	xorlw	128
   918  3D9  02C                	movwf	12
   919  3DA  C80                	movlw	128
   920  3DB  08C                	subwf	12,w
   921  3DC  743                	skipz
   922  3DD  BE0                	goto	u15
   923  3DE  C08                	movlw	8
   924  3DF  08E                	subwf	14,w
   925  3E0                     u15:	
   926  3E0  603                	btfsc	3,0
   927  3E1  01E                	return
   928                           
   929                           ;main.c: 210: {
   930                           ;main.c: 211: PORTB = mask;
   931  3E2  010                	movlb	0	; select bank0
   932  3E3  215                	movf	TEST_LED_PATTERN@mask,w
   933  3E4  027                	movwf	7	;volatile
   934                           
   935                           ;main.c: 212: PORTC = mask;
   936  3E5  215                	movf	TEST_LED_PATTERN@mask,w
   937  3E6  028                	movwf	8	;volatile
   938                           
   939                           ;main.c: 213: mask = mask << 1;
   940  3E7  215                	movf	TEST_LED_PATTERN@mask,w
   941  3E8  031                	movwf	??_TEST_LED_PATTERN
   942  3E9  1D1                	addwf	??_TEST_LED_PATTERN,w
   943  3EA  035                	movwf	TEST_LED_PATTERN@mask
   944                           
   945                           ;main.c: 214: _delay((unsigned long)((500)*(32768/4000.0)));
   946  3EB  C06                	movlw	6
   947  3EC  032                	movwf	??_TEST_LED_PATTERN+1
   948  3ED  C50                	movlw	80
   949  3EE  031                	movwf	??_TEST_LED_PATTERN
   950  3EF                     u807:	
   951  3EF  2F1                	decfsz	??_TEST_LED_PATTERN,f
   952  3F0  BEF                	goto	u807
   953  3F1  2F2                	decfsz	??_TEST_LED_PATTERN+1,f
   954  3F2  BEF                	goto	u807
   955  3F3  000                	nop
   956  3F4  C01                	movlw	1
   957  3F5  02C                	movwf	12
   958  3F6  06D                	clrf	13
   959  3F7  20C                	movf	12,w
   960  3F8  010                	movlb	0	; select bank0
   961  3F9  1F3                	addwf	TEST_LED_PATTERN@i,f
   962  3FA  603                	skipnc
   963  3FB  2B4                	incf	TEST_LED_PATTERN@i+1,f
   964  3FC  20D                	movf	13,w
   965  3FD  1F4                	addwf	TEST_LED_PATTERN@i+1,f
   966  3FE  BD3                	goto	L2
   967  3FF                     __end_of_TEST_LED_PATTERN:	
   968                           ;main.c: 215: }
   969                           ;main.c: 217: return;
   970                           
   971                           
   972                           	psect	jmp_tab
   973  061                     __pjmp_tab:	
   974                           ;incstack = 0
   975                           ; Regs used in _TEST_LED_PATTERN: [wreg-fsr0h+status,2-btemp+3]
   976                           
   977  061                     entry__TEST_LED_PATTERN:	
   978  061  5A3  BCE           	ljmp	_TEST_LED_PATTERN
   979                           
   980                           	psect	intentry
   981  004                     __pintentry:	
   982 ;; *************** function _isr *****************
   983 ;; Defined at:
   984 ;;		line 220 in file "main.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;		None
   987 ;; Auto vars:     Size  Location     Type
   988 ;;		None
   989 ;; Return value:  Size  Location     Type
   990 ;;		None               void
   991 ;; Registers used:
   992 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+1
   993 ;; Tracked objects:
   994 ;;		On entry : 0/0
   995 ;;		On exit  : 0/0
   996 ;;		Unchanged: 0/0
   997 ;; Data sizes:      BANK0   BANK1   BANK3   BANK2  COMMON
   998 ;;      Params:         0       0       0       0       0
   999 ;;      Locals:         0       0       0       0       0
  1000 ;;      Temps:          1       0       0       0       0
  1001 ;;      Totals:         1       0       0       0       0
  1002 ;;Total ram usage:        1 bytes
  1003 ;; Hardware stack levels used:    1
  1004 ;; This function calls:
  1005 ;;		Nothing
  1006 ;; This function is called by:
  1007 ;;		Interrupt level 1
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011  004                     _isr:	
  1012  004                     interrupt_function:	
  1013                           ;incstack = 0
  1014                           ; Regs used in _isr: [wreg-fsr0h+status,2-btemp+1]
  1015                           
  1016  004  010                	movlb	0	; select bank0
  1017  005  20D                	movf	btemp+1,w
  1018  006  030                	movwf	??_isr
  1019  007                     i1l639:	
  1020                           
  1021                           ;main.c: 222: INTCNT = INTCNT + 1;
  1022  007  011                	movlb	1	; select bank1
  1023  008  211                	movf	(_INTCNT+1)^(0+32),w
  1024  009  02D                	movwf	btemp+1
  1025  00A  210                	movf	_INTCNT^(0+32),w
  1026  00B  02C                	movwf	btemp
  1027  00C  C01                	movlw	1
  1028  00D  1CC                	addwf	wtemp0,w
  1029  00E  030                	movwf	_INTCNT^(0+32)
  1030  00F  20D                	movf	wtemp0+1,w
  1031  010  031                	movwf	(_INTCNT+1)^(0+32)
  1032  011  603                	skipnc
  1033  012  2B1                	incf	(_INTCNT+1)^(0+32),f
  1034  013  C00                	movlw	0
  1035  014  1F1                	addwf	(_INTCNT+1)^(0+32),f
  1036  015                     i1l641:	
  1037                           
  1038                           ;main.c: 223: if(INTCNT == 32)
  1039  015  C20                	movlw	32
  1040  016  190                	xorwf	_INTCNT^(0+32),w
  1041  017  111                	iorwf	(_INTCNT+1)^(0+32),w
  1042  018  743                	btfss	3,2
  1043  019  A1B                	goto	u75_21
  1044  01A  A1C                	goto	u75_20
  1045  01B                     u75_21:	
  1046  01B  A41                	goto	i1l99
  1047  01C                     u75_20:	
  1048  01C                     i1l643:	
  1049                           
  1050                           ;main.c: 224: {
  1051                           ;main.c: 225: INTCNT = 0;
  1052  01C  070                	clrf	_INTCNT^(0+32)
  1053  01D  071                	clrf	(_INTCNT+1)^(0+32)
  1054  01E                     i1l645:	
  1055                           
  1056                           ;main.c: 226: SEC = SEC + 1;
  1057  01E  C01                	movlw	1
  1058  01F  010                	movlb	0	; select bank0
  1059  020  1DB                	addwf	_SEC,w
  1060  021  03B                	movwf	_SEC
  1061  022                     i1l647:	
  1062                           
  1063                           ;main.c: 228: if (SEC == 60)
  1064  022  C3C                	movlw	60
  1065  023  19B                	xorwf	_SEC,w
  1066  024  743                	btfss	3,2
  1067  025  A27                	goto	u76_21
  1068  026  A28                	goto	u76_20
  1069  027                     u76_21:	
  1070  027  A41                	goto	i1l99
  1071  028                     u76_20:	
  1072  028                     i1l649:	
  1073                           
  1074                           ;main.c: 229: {
  1075                           ;main.c: 230: SEC = 0;
  1076  028  07B                	clrf	_SEC
  1077  029                     i1l651:	
  1078                           
  1079                           ;main.c: 231: MIN = MIN + 1;
  1080  029  C01                	movlw	1
  1081  02A  1DE                	addwf	_MIN,w
  1082  02B  03E                	movwf	_MIN
  1083  02C                     i1l653:	
  1084                           
  1085                           ;main.c: 232: if (MIN == 60)
  1086  02C  C3C                	movlw	60
  1087  02D  19E                	xorwf	_MIN,w
  1088  02E  743                	btfss	3,2
  1089  02F  A31                	goto	u77_21
  1090  030  A32                	goto	u77_20
  1091  031                     u77_21:	
  1092  031  A41                	goto	i1l99
  1093  032                     u77_20:	
  1094  032                     i1l655:	
  1095                           
  1096                           ;main.c: 233: {
  1097                           ;main.c: 234: MIN = 0;
  1098  032  07E                	clrf	_MIN
  1099  033                     i1l657:	
  1100                           
  1101                           ;main.c: 235: HOUR = HOUR + 1;
  1102  033  C01                	movlw	1
  1103  034  1DD                	addwf	_HOUR,w
  1104  035  03D                	movwf	_HOUR
  1105  036                     i1l659:	
  1106                           
  1107                           ;main.c: 236: if(HOUR == 13)
  1108  036  C0D                	movlw	13
  1109  037  19D                	xorwf	_HOUR,w
  1110  038  743                	btfss	3,2
  1111  039  A3B                	goto	u78_21
  1112  03A  A3C                	goto	u78_20
  1113  03B                     u78_21:	
  1114  03B  A41                	goto	i1l99
  1115  03C                     u78_20:	
  1116  03C                     i1l661:	
  1117                           
  1118                           ;main.c: 237: {
  1119                           ;main.c: 238: HOUR = 1;
  1120  03C  07D                	clrf	_HOUR
  1121  03D  2BD                	incf	_HOUR,f
  1122  03E  A41                	goto	i1l99
  1123  03F                     i1l102:	
  1124  03F  A41                	goto	i1l99
  1125  040                     i1l101:	
  1126  040  A41                	goto	i1l99
  1127  041                     i1l100:	
  1128  041                     i1l99:	
  1129                           
  1130                           ;main.c: 239: }
  1131                           ;main.c: 240: }
  1132                           ;main.c: 241: }
  1133                           ;main.c: 242: }
  1134                           ;main.c: 243: T0IF = 0;
  1135  041  4AB                	bcf	11,5	;volatile
  1136  042  A43                	goto	i1l103
  1137  043                     i1l663:	
  1138  043                     i1l103:	
  1139                           ;main.c: 244: return;
  1140                           
  1141  043  010                	movlb	0	; select bank0
  1142  044  210                	movf	??_isr,w
  1143  045  02D                	movwf	btemp+1
  1144  046  01F                	retfie
  1145  047                     __end_of_isr:	
  1146  000C                     btemp	set	12	;btemp
  1147  000C                     wtemp	set	12
  1148  000C                     wtemp0	set	12
  1149  000E                     wtemp1	set	14
  1150  0010                     wtemp2	set	16
  1151  0012                     wtemp3	set	18
  1152  0014                     wtemp4	set	20
  1153  0016                     wtemp5	set	22
  1154  000D                     wtemp6	set	13
  1155  000C                     ttemp	set	12
  1156  000C                     ttemp0	set	12
  1157  000F                     ttemp1	set	15
  1158  0012                     ttemp2	set	18
  1159  0015                     ttemp3	set	21
  1160  000D                     ttemp4	set	13
  1161  000C                     ltemp	set	12
  1162  000C                     ltemp0	set	12
  1163  0010                     ltemp1	set	16
  1164  0014                     ltemp2	set	20
  1165  000E                     ltemp3	set	14


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    BANK0            16      8      15
    BANK1            16      0       2
    BANK3            16      0       0
    BANK2            16      0       0
    COMMON            0      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in BANK0

    _main->_TEST_LED_PATTERN

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      75
                                              6 BANK0      2     2      0
                   _TEST_LED_PATTERN
 ---------------------------------------------------------------------------------
 (1) _TEST_LED_PATTERN                                     5     5      0      75
                                              1 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _isr                                                  1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _TEST_LED_PATTERN

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
STACK                0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
ABS                  0      0      11       1        0.0%
BITBANK0            10      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BANK0               10      8       F       3       93.8%
BITBANK1            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               10      0       2       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
DATA                 0      0      11       6        0.0%
BITBANK3            10      0       0       7        0.0%
BANK3               10      0       0       8        0.0%
BITBANK2            10      0       0       9        0.0%
BANK2               10      0       0      10        0.0%
BITCOMMON            0      0       0      11        0.0%
COMMON               0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Tue Nov 03 17:39:47 2015

 __end_of_TEST_LED_PATTERN 03FF                __CFG_CP$OFF 0000                         u15 03E0  
                       u60 00A1                         u90 00B0                         u85 00A7  
                      l601 01B9                        l521 0081                        l513 0077  
                      l603 01C8                        l611 01E0                        l605 01D7  
                      l541 00B2                        l607 01DE                        l543 00C1  
                      l535 0099                        l545 00D0                        l537 009C  
                      l529 008D                        l563 0136                        l547 0122  
                      l539 00A3                        l549 0129                        l591 0176  
                      l593 0185                        l585 0151                        l595 018C  
                      l587 0158                        l579 014C                        l597 019B  
                      l589 0167                        l599 01AA                        _GIE 0058  
                      _RC0 0040                        _RC1 0041                        _RC2 0042  
                      _RB4 003C                        _RC3 0043                        _RB5 003D  
                      _RC4 0044                        _RB6 003E                        _RC5 0045  
                      _RB7 003F                        _RC6 0046                        _RC7 0047  
                      u200 00E4                        u120 00BF                        u115 00B6  
                      u230 00F3                        u214 00E6                        u150 00CE  
                      u320 0120                        u304 0113                        u225 00EA  
                      u145 00C5                        u170 00D5                        u315 0117  
                      u340 0127                        u260 0102                        u244 00F5  
                      _MIN 001E                        u430 0156                        u255 00F9  
                      u600 01A8                        u520 0183                        u184 00D7  
                      _SEC 001B                        u290 0111                        u274 0104  
                      u515 017A                        u195 00DB                        u540 018A  
                      u460 0165                        u285 0108                        u630 01B7  
                      u455 015C                        u625 01AE                        u570 0199  
                      u490 0174                        u660 01C6                        u565 0190  
                      u485 016B                        u807 03EF                        u655 01BD  
                      u690 01D5                        u595 019F                        u685 01CC  
                      u797 01D9                        _isr 0004               __CFG_FOSC$LP 0000  
   entry__TEST_LED_PATTERN 0061                       ?_isr 0010                       _T0IE 032D  
                     _T0IF 005D                       _HOUR 001D                       i1l99 0041  
                     _main 0063                       btemp 000C                       ltemp 000C  
                     start 0049                       ttemp 000C                       wtemp 000C  
            __CFG_CPSW$OFF 0000              __CFG_MCLRE$ON 0000                      ??_isr 0010  
                    ?_main 0010              __CFG_WDTE$OFF 0000                      _ANSEL 002A  
                    i1l100 0041                      i1l101 0040                      i1l102 003F  
                    i1l103 0043                      i1l641 0015                      i1l651 0029  
                    i1l643 001C                      i1l661 003C                      i1l653 002C  
                    i1l645 001E                _Change_time 0019                      i1l663 0043  
                    i1l655 0032                      i1l647 0022                      i1l639 0007  
                    i1l657 0033                      i1l649 0028                      i1l659 0036  
                    _PORTB 0007                      _PORTC 0008                      _STATE 001C  
                    _TRISB 0007                      _TRISC 0008                      u75_20 001C  
                    u75_21 001B                      u76_20 0028                      u76_21 0027  
                    u77_20 0032                      u77_21 0031                      u78_20 003C  
                    u78_21 003B             __CFG_BOREN$OFF 0000                      ltemp0 000C  
                    ltemp1 0010                      ltemp2 0014                      ltemp3 000E  
                    ttemp0 000C                      ttemp1 000F                      ttemp2 0012  
                    ttemp3 0015                      ttemp4 000D                      status 0003  
                    wtemp0 000C                      wtemp1 000E                      wtemp2 0010  
                    wtemp3 0012                      wtemp4 0014                      wtemp5 0016  
                    wtemp6 000D             __CFG_DRTEN$OFF 0000            __initialization 004B  
             __end_of_main 01F0                     ??_main 0016                     _INTCNT 0030  
                   _OPTION 0000    __end_of__initialization 005C               __pidataBANK0 005F  
        ?_TEST_LED_PATTERN 0010         ??_TEST_LED_PATTERN 0011                 __pbssBANK0 0018  
               __pbssBANK1 0030                 __pmaintext 0063                 __pintentry 0004  
                  _CM1CON0 0027                    _CM2CON0 0028       TEST_LED_PATTERN@mask 0015  
             _Disp_timeout 001A                    __ptext1 03CE          TEST_LED_PATTERN@i 0013  
             __size_of_isr 0043       end_of_initialization 005C        start_initialization 004B  
              __end_of_isr 0047           __CFG_IOSCFS$8MHz 0000  __size_of_TEST_LED_PATTERN 0031  
              __pdataBANK0 001D                  ___latbits 0001              __pcstackBANK0 0010  
                __pjmp_tab 0061          interrupt_function 0004           _TEST_LED_PATTERN 03CE  
              _BUTT_action 0018              __size_of_main 018D                   intlevel1 0004  
